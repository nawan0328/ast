package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"time"

	_ "github.com/go-sql-driver/mysql"
)

func getPrice_history() {

	var code string
	var err error
	date := time.Now().Format("2006-01-02")

	stmt, err = db.Prepare(insert_price)
	if err != nil {
		fmt.Println(insert_price)
		log.Fatal(err)
	}

	rows, err := db.Query(select_code)
	if err != nil {
		fmt.Println(select_code)
		log.Fatal(err)
	}
	defer rows.Close()

	for rows.Next() {
		err := rows.Scan(&code)
		if err != nil {
			fmt.Println(code)
			log.Fatal(err)
		}
		data := getJson(code)
		go InsertData(date, code, data.Result.Areas[0].Datas[0].Sv, data.Result.Areas[0].Datas[0].Hv, data.Result.Areas[0].Datas[0].Lv, data.Result.Areas[0].Datas[0].Cv, data.Result.Areas[0].Datas[0].Aq)
	}
	time.Sleep(100 * time.Millisecond)
}

func InsertData(a ...interface{}) {
	_, err := stmt.Exec(a...)
	if err != nil {
		fmt.Println(a...)
		fmt.Println(err)
		return
	}
}

func getJson(code string) (jsontype JsonObject) {
	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go
	req, err := http.NewRequest("GET", "http://polling.finance.naver.com/api/realtime.nhn?query=SERVICE_ITEM:"+code, nil)
	if err != nil {
		fmt.Println(code, err)
		return
	}
	req.Header.Set("Accept", "application/json")

	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		fmt.Println(code, err)
		return
	}
	defer resp.Body.Close()

	contents, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		fmt.Println(code, err)
		return
	}

	err = json.Unmarshal(contents, &jsontype)
	if err != nil {
		fmt.Println(code, err)
		return
	}
	return
}
